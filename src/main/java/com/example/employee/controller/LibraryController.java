package com\example\employee.controller;

import com\example\employee.model.Library;
import com\example\employee.service.LibraryService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

/**
 * Library REST Controller - Auto-generated by GitHub Agent
 * Following Spring Boot patterns found in existing controllers
 */
@RestController
@RequestMapping("/api/library")
@CrossOrigin(origins = "*")
public class LibraryController {
    
    @Autowired
    private LibraryService libraryService;
    
    @GetMapping
    public ResponseEntity<List<Library>> getAll() {
        List<Library> items = libraryService.findAll();
        return ResponseEntity.ok(items);
    }
    
    @GetMapping("/{id}")
    public ResponseEntity<Library> getById(@PathVariable Long id) {
        Library item = libraryService.findById(id);
        if (item != null) {
            return ResponseEntity.ok(item);
        }
        return ResponseEntity.notFound().build();
    }
    
    @PostMapping
    public ResponseEntity<Library> create(@RequestBody Library library) {
        Library saved = libraryService.save(library);
        return ResponseEntity.ok(saved);
    }
    
    @PutMapping("/{id}")
    public ResponseEntity<Library> update(@PathVariable Long id, @RequestBody Library library) {
        Library updated = libraryService.update(id, library);
        if (updated != null) {
            return ResponseEntity.ok(updated);
        }
        return ResponseEntity.notFound().build();
    }
    
    @DeleteMapping("/{id}")
    public ResponseEntity<Void> delete(@PathVariable Long id) {
        libraryService.delete(id);
        return ResponseEntity.ok().build();
    }
}
